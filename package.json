{
	"name": "adonis-vscode-extension",
	"displayName": "AdonisJS Extension",
	"description": "The official VSCode extension of AdonisJS",
	"icon": "assets/adonis.png",
	"author": "Julien Ripouteau <julien@ripouteau.com>",
	"publisher": "jripouteau",
	"version": "0.3.0",
	"engines": {
		"vscode": "^1.65.0"
	},
	"categories": [
		"Programming Languages",
		"Formatters",
		"Snippets",
		"Other"
	],
	"keywords": [
		"Adonis",
		"AdonisJS",
		"Ace",
		"NodeJS",
		"Japa",
		"Edge"
	],
	"repository": {
		"type": "git",
		"url": "https://github.com/Julien-R44/adonis-vscode-extension.git"
	},
	"activationEvents": [
		"workspaceContains:**/ace",
		"onLanguage:edge"
	],
	"main": "./dist/index.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "AdonisJS",
			"properties": {
				"adonisjs.misc.runMigrationInBackground": {
					"type": "boolean",
					"description": "Should migration/seeds commands run in background ?",
					"default": false
				},
				"adonisjs.misc.nodePath": {
					"type": "string",
					"description": "The path to the node executable",
					"default": "node"
				},
				"adonisjs.autocomplete.quickJump": {
					"type": "boolean",
					"default": true,
					"description": "Quick jump between files using 'Ctrl' + Click"
				},
				"adonisjs.autocomplete.folderTip": {
					"type": "boolean",
					"default": true,
					"description": "Display file path name on hover"
				},
				"adonisjs.autocomplete.maxLinesCount": {
					"type": "integer",
					"default": 1200,
					"description": "Maximum lines of text to scan for autocompletion"
				},
				"adonisjs.autocomplete.viewsDirectories": {
					"type": "array",
					"description": "Paths to the directory containing edge views",
					"default": [
						"resources/views"
					]
				},
				"adonisjs.autocomplete.viewsExtensions": {
					"type": "array",
					"description": "Supported file extension for view completion",
					"default": [
						".edge"
					]
				},
				"adonisjs.autocomplete.viewsRegex": {
					"type": "string",
					"description": "Regular expression to match handle edge includes",
					"default": "(?<=@include\\(['\\\"]|@layout\\(['\\\"]|@!component\\(['\\\"]|@component\\(['\\\"])([^'\">]+)"
				},
				"adonisjs.autocomplete.viewsCompletionRegex": {
					"type": "string",
					"description": "Regular expression to match handle edge includes",
					"default": "(?<=[@include|@component|@layout|@!component]\\()(['\"])[^'\"]*\\1"
				},
				"adonisjs.autocomplete.controllersDirectories": {
					"type": "array",
					"description": "Paths to the directory containing AdonisJS controllers",
					"default": [
						"app/controllers"
					]
				},
				"adonisjs.autocomplete.controllersExtensions": {
					"type": "array",
					"description": "Supported file extension for controller completion",
					"default": [
						"controller.ts",
						"Controller.ts"
					]
				},
				"adonisjs.autocomplete.controllersRegex": {
					"type": "string",
					"description": "Regular expression to match handle route controllers",
					"default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^'\"]*)\\.?([^'\"]*)\\1"
				},
				"adonisjs.autocomplete.controllersNameCompletionRegex": {
					"type": "string",
					"description": "Regular expression to match handle route controllers",
					"default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^\\.'\"]*)\\1"
				},
				"adonisjs.autocomplete.controllersMethodCompletionRegex": {
					"type": "string",
					"description": "Regular expression to match handle route controllers",
					"default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^'\"]*)\\.([^'\"]*)\\1"
				},
				"adonisjs.misc.useUnixCd": {
					"type": "boolean",
					"default": false,
					"description": "Use Unix-style cd for windows terminals ( Useful when using Cygwin or Git Bash )"
				}
			}
		},
		"menus": {
			"commandPalette": [
				{
					"command": "adonis-vscode-extension.make.command",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.controller",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.exception",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.middleware",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.migration",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.model",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.seeder",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.view",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.validator",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.prldfile",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.make.test",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.migration.fresh",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.migration.refresh",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.migration.reset",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.migration.run",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.migration.rollback",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.generate.manifest",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.configure",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.type-check",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.list.routes",
					"when": "adonisProjectLoaded == true"
				},
				{
					"command": "adonis-vscode-extension.test",
					"when": "adonisProjectLoaded == true"
				}
			]
		},
		"commands": [
			{
				"command": "adonis-vscode-extension.make.command",
				"title": "⌨️ AdonisJS(Ace) Make Command"
			},
			{
				"command": "adonis-vscode-extension.make.controller",
				"title": "⌨️ AdonisJS(Ace) Make Controller"
			},
			{
				"command": "adonis-vscode-extension.make.exception",
				"title": "⌨️ AdonisJS(Ace) Make Exception"
			},
			{
				"command": "adonis-vscode-extension.make.middleware",
				"title": "⌨️ AdonisJS(Ace) Make Middleware"
			},
			{
				"command": "adonis-vscode-extension.make.migration",
				"title": "⌨️ AdonisJS(Ace) Make Migration"
			},
			{
				"command": "adonis-vscode-extension.make.model",
				"title": "⌨️ AdonisJS(Ace) Make Model"
			},
			{
				"command": "adonis-vscode-extension.make.seeder",
				"title": "⌨️ AdonisJS(Ace) Make Seeder"
			},
			{
				"command": "adonis-vscode-extension.make.view",
				"title": "⌨️ AdonisJS(Ace) Make View"
			},
			{
				"command": "adonis-vscode-extension.make.validator",
				"title": "⌨️ AdonisJS(Ace) Make Validator"
			},
			{
				"command": "adonis-vscode-extension.make.prldfile",
				"title": "⌨️ AdonisJS(Ace) Make Preloaded File"
			},
			{
				"command": "adonis-vscode-extension.make.test",
				"title": "⌨️ AdonisJS(Ace) Make Test"
			},
			{
				"command": "adonis-vscode-extension.migration.fresh",
				"title": "⌨️ AdonisJS(Ace) Migration Fresh"
			},
			{
				"command": "adonis-vscode-extension.migration.refresh",
				"title": "⌨️ AdonisJS(Ace) Migration Refresh"
			},
			{
				"command": "adonis-vscode-extension.migration.reset",
				"title": "⌨️ AdonisJS(Ace) Migration Reset"
			},
			{
				"command": "adonis-vscode-extension.migration.run",
				"title": "⌨️ AdonisJS(Ace) Migration Run"
			},
			{
				"command": "adonis-vscode-extension.migration.rollback",
				"title": "⌨️ AdonisJS(Ace) Migration Rollback"
			},
			{
				"command": "adonis-vscode-extension.generate.manifest",
				"title": "⌨️ AdonisJS(Ace) Generate Manifest"
			},
			{
				"command": "adonis-vscode-extension.configure",
				"title": "⌨️ AdonisJS(Ace) Configure package"
			},
			{
				"command": "adonis-vscode-extension.type-check",
				"title": "⌨️ AdonisJS(Ace) Type Check"
			},
			{
				"command": "adonis-vscode-extension.list.routes",
				"title": "⌨️ AdonisJS(Ace) List Routes"
			},
			{
				"command": "adonis-vscode-extension.test",
				"title": "⌨️  AdonisJS(Ace) Run Tests"
			},
			{
				"command": "adonis-vscode-extension.docs.adonis",
				"title": "📜 AdonisJS(Docs) Open Docs"
			},
			{
				"command": "adonis-vscode-extension.docs.japa",
				"title": "📜 AdonisJS(Docs) Open Japa Docs"
			}
		],
		"snippets": [
			{
				"language": "typescript",
				"path": "./snippets/adonis/routes.json"
			},
			{
				"language": "edge",
				"path": "./snippets/edge/tags.jsonc"
			},
			{
				"language": "typescript",
				"path": "./snippets/japa/index.json"
			}
		],
		"languages": [
			{
				"id": "edge",
				"aliases": [
					"Edge Template",
					"Edge",
					"edge"
				],
				"extensions": [
					".edge",
					".edge.html"
				],
				"configuration": "./syntaxes/edge.configuration.jsonc"
			}
		],
		"grammars": [
			{
				"language": "edge",
				"scopeName": "text.html.edge",
				"path": "./syntaxes/edge.tmLanguage.json",
				"embeddedLanguages": {
					"source.css": "css",
					"source.js": "javascript"
				}
			}
		],
		"jsonValidation": [
			{
				"fileMatch": ".adonisrc.json",
				"url": "./schemas/adonisrc.jsonc"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile",
		"lint": "eslint . --ext=.ts",
		"test": "node ./out/test/runTest.js",
		"mrm": "mrm --preset=@adonisjs/mrm-preset",
		"sync-labels": "github-label-sync --labels ./node_modules/@adonisjs/mrm-preset/gh-labels.json Julien-R44/adonis-vscode-extension",
		"version": "npm run build",
		"format": "prettier --write ."
	},
	"devDependencies": {
		"@japa/assert": "^1.3.4",
		"@japa/runner": "^2.0.8",
		"@japa/spec-reporter": "^1.1.12",
		"@types/glob": "^7.2.0",
		"@types/node": "14.x",
		"@types/sinon": "^10.0.11",
		"@types/vscode": "^1.65.0",
		"@typescript-eslint/eslint-plugin": "^5.26.0",
		"@typescript-eslint/parser": "^5.26.0",
		"@vscode/test-electron": "^2.1.3",
		"eslint": "^8.16.0",
		"eslint-config-prettier": "^8.5.0",
		"eslint-plugin-adonis": "^2.1.0",
		"eslint-plugin-prettier": "^4.0.0",
		"github-label-sync": "^2.2.0",
		"glob": "^7.2.0",
		"np": "^7.6.1",
		"prettier": "^2.6.2",
		"sinon": "^14.0.0",
		"ts-loader": "^9.3.0",
		"typescript": "^4.7.2",
		"webpack": "^5.72.1",
		"webpack-cli": "^4.9.2"
	},
	"mrmConfig": {
		"core": true,
		"license": "MIT",
		"services": [
			"github-actions"
		],
		"minNodeVersion": "16.13.1",
		"probotApps": [
			"stale"
		],
		"runGhActionsOnWindows": false
	},
	"eslintConfig": {
		"extends": [
			"plugin:adonis/typescriptPackage",
			"prettier"
		],
		"plugins": [
			"prettier"
		],
		"rules": {
			"prettier/prettier": [
				"error",
				{
					"endOfLine": "auto"
				}
			]
		}
	},
	"eslintIgnore": [
		"build"
	],
	"license": "MIT",
	"np": {
		"contents": ".",
		"anyBranch": false
	},
	"prettier": {
		"trailingComma": "es5",
		"semi": false,
		"singleQuote": true,
		"useTabs": false,
		"quoteProps": "consistent",
		"bracketSpacing": true,
		"arrowParens": "always",
		"printWidth": 100
	},
	"dependencies": {
		"@poppinss/module-methods-extractor": "^1.0.5",
		"docblock": "^0.4.5",
		"vscode-html-languageservice": "^5.0.0",
		"vscode-languageserver-types": "^3.17.1"
	},
	"pnpm": {
    "peerDependencyRules": {
      "ignoreMissing": ["openapi-types"]
    }
  }
}
