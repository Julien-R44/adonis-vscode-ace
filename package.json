{
  "publisher": "jripouteau",
  "name": "adonis-vscode-extension",
  "displayName": "AdonisJS Extension",
  "version": "0.7.0",
  "description": "The official VSCode extension of AdonisJS",
  "author": "Julien Ripouteau <julien@ripouteau.com>",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/Julien-R44/adonis-vscode-extension.git"
  },
  "keywords": [
    "Adonis",
    "AdonisJS",
    "Adonis.js",
    "Ace",
    "Node.js",
    "Japa",
    "Edge"
  ],
  "categories": [
    "Programming Languages",
    "Formatters",
    "Snippets",
    "Other"
  ],
  "sponsor": {
    "url": "https://github.com/sponsors/Julien-R44"
  },
  "main": "./dist/index.js",
  "icon": "assets/adonis.png",
  "engines": {
    "vscode": "^1.65.0"
  },
  "extensionDependencies": [
    "vscode.html-language-features"
  ],
  "activationEvents": [
    "workspaceContains:**/ace",
    "onLanguage:edge"
  ],
  "contributes": {
    "htmlLanguageParticipants": [
      {
        "languageId": "edge",
        "autoInsert": true
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "adonisjs",
          "title": "AdonisJS",
          "icon": "assets/adonis.svg",
          "when": "adonisProjectLoaded == true"
        }
      ]
    },
    "views": {
      "adonisjs": [
        {
          "id": "adonisjs.commands",
          "name": "Commands",
          "icon": "assets/adonis.svg",
          "when": "adonisProjectLoaded == true"
        },
        {
          "id": "adonisjs.routes",
          "name": "Routes",
          "when": "adonisProjectLoaded == true"
        },
        {
          "id": "adonisjs.help",
          "name": "Get Help",
          "when": "adonisProjectLoaded == true"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "AdonisJS",
      "properties": {
        "adonisjs.misc.runMigrationInBackground": {
          "type": "boolean",
          "description": "Should migration/seeds commands run in background ?",
          "default": false
        },
        "adonisjs.misc.nodePath": {
          "type": "string",
          "description": "The path to the node executable",
          "default": "node"
        },
        "adonisjs.autocomplete.quickJump": {
          "type": "boolean",
          "default": true,
          "description": "Quick jump between files using 'Ctrl' + Click"
        },
        "adonisjs.autocomplete.folderTip": {
          "type": "boolean",
          "default": true,
          "description": "Display file path name on hover"
        },
        "adonisjs.autocomplete.maxLinesCount": {
          "type": "integer",
          "default": 1200,
          "description": "Maximum lines of text to scan for autocompletion"
        },
        "adonisjs.autocomplete.viewsDirectories": {
          "type": "array",
          "description": "Paths to the directory containing edge views",
          "default": [
            "resources/views"
          ]
        },
        "adonisjs.autocomplete.viewsExtensions": {
          "type": "array",
          "description": "Supported file extension for view completion",
          "default": [
            ".edge"
          ]
        },
        "adonisjs.autocomplete.viewsRegex": {
          "type": "string",
          "description": "Regular expression to match handle edge includes",
          "default": "(?<=@include\\(['\\\"]|@layout\\(['\\\"]|@!component\\(['\\\"]|@component\\(['\\\"])([^'\">]+)"
        },
        "adonisjs.autocomplete.viewsCompletionRegex": {
          "type": "string",
          "description": "Regular expression to match handle edge includes",
          "default": "(?<=[@include|@component|@layout|@!component]\\()(['\"])[^'\"]*\\1"
        },
        "adonisjs.autocomplete.controllersDirectories": {
          "type": "array",
          "description": "Paths to the directory containing AdonisJS controllers",
          "default": [
            "app/controllers"
          ]
        },
        "adonisjs.autocomplete.controllersExtensions": {
          "type": "array",
          "description": "Supported file extension for controller completion",
          "default": [
            "controller.ts",
            "Controller.ts"
          ]
        },
        "adonisjs.autocomplete.controllersRegex": {
          "type": "string",
          "description": "Regular expression to match handle route controllers",
          "default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^'\"]*)\\.?([^'\"]*)\\1"
        },
        "adonisjs.autocomplete.controllersNameCompletionRegex": {
          "type": "string",
          "description": "Regular expression to match handle route controllers",
          "default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^\\.'\"]*)\\1"
        },
        "adonisjs.autocomplete.controllersMethodCompletionRegex": {
          "type": "string",
          "description": "Regular expression to match handle route controllers",
          "default": "(?<=Route\\.[a-zA-Z]*\\(['\"][^'\"]*['\"]\\s*,\\s*)(['\"])([^'\"]*)\\.([^'\"]*)\\1"
        },
        "adonisjs.misc.useUnixCd": {
          "type": "boolean",
          "default": false,
          "description": "Use Unix-style cd for windows terminals ( Useful when using Cygwin or Git Bash )"
        }
      }
    },
    "menus": {
      "view/title": [
        {
          "command": "adonis-vscode-extension.view.routes.viewAsList",
          "when": "view == adonisjs.routes && !adonis-vscode-extension.view.routes.viewAsList",
          "group": "navigation"
        },
        {
          "command": "adonis-vscode-extension.view.routes.viewAsTree",
          "when": "view == adonisjs.routes && adonis-vscode-extension.view.routes.viewAsList",
          "group": "navigation"
        },
        {
          "command": "adonis-vscode-extension.view.routes.refresh",
          "when": "view == adonisjs.routes",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "adonis-vscode-extension.view.routes.open-in-browser",
          "when": "view == adonisjs.routes && viewItem == route",
          "group": "inline"
        },
        {
          "command": "adonis-vscode-extension.view.routes.copy-link",
          "when": "view == adonisjs.routes && viewItem == route",
          "group": "inline"
        },
        {
          "command": "adonis-vscode-extension.view.routes.open-in-browser",
          "when": "view == adonisjs.routes && viewItem == route"
        },
        {
          "command": "adonis-vscode-extension.view.routes.copy-link",
          "when": "view == adonisjs.routes && viewItem == route"
        },
        {
          "command": "adonis-vscode-extension.run-command",
          "when": "view == adonisjs.commands && viewItem == command",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "adonis-vscode-extension.make.command",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.controller",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.exception",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.middleware",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.migration",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.model",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.seeder",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.view",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.validator",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.prldfile",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.test",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.suite",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.factory",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.make.policy",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.migration.fresh",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.migration.refresh",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.migration.reset",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.migration.run",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.migration.rollback",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.generate.manifest",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.configure",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.type-check",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.list.routes",
          "when": "adonisProjectLoaded == true"
        },
        {
          "command": "adonis-vscode-extension.test",
          "when": "adonisProjectLoaded == true"
        }
      ]
    },
    "commands": [
      {
        "command": "adonis-vscode-extension.run-command",
        "title": "Run command",
        "icon": "$(notebook-execute)"
      },
      {
        "command": "adonis-vscode-extension.view.routes.viewAsList",
        "title": "See as list",
        "icon": "$(list-flat)",
        "enablement": "!adonis-vscode-extension.view.routes.viewAsList"
      },
      {
        "command": "adonis-vscode-extension.view.routes.viewAsTree",
        "title": "See as tree",
        "icon": "$(list-tree)",
        "enablement": "adonis-vscode-extension.view.routes.viewAsList"
      },
      {
        "command": "adonis-vscode-extension.view.routes.refresh",
        "title": "Refresh Routes",
        "icon": "$(refresh)"
      },
      {
        "command": "adonis-vscode-extension.view.routes.open-in-browser",
        "title": "Open in Browser",
        "icon": "$(link-external)"
      },
      {
        "command": "adonis-vscode-extension.view.routes.copy-link",
        "title": "Copy link",
        "icon": "$(clippy)"
      },
      {
        "command": "adonis-vscode-extension.make.command",
        "title": "⌨️ AdonisJS(Ace) Make Command"
      },
      {
        "command": "adonis-vscode-extension.make.controller",
        "title": "⌨️ AdonisJS(Ace) Make Controller"
      },
      {
        "command": "adonis-vscode-extension.make.exception",
        "title": "⌨️ AdonisJS(Ace) Make Exception"
      },
      {
        "command": "adonis-vscode-extension.make.middleware",
        "title": "⌨️ AdonisJS(Ace) Make Middleware"
      },
      {
        "command": "adonis-vscode-extension.make.migration",
        "title": "⌨️ AdonisJS(Ace) Make Migration"
      },
      {
        "command": "adonis-vscode-extension.make.model",
        "title": "⌨️ AdonisJS(Ace) Make Model"
      },
      {
        "command": "adonis-vscode-extension.make.seeder",
        "title": "⌨️ AdonisJS(Ace) Make Seeder"
      },
      {
        "command": "adonis-vscode-extension.make.view",
        "title": "⌨️ AdonisJS(Ace) Make View"
      },
      {
        "command": "adonis-vscode-extension.make.validator",
        "title": "⌨️ AdonisJS(Ace) Make Validator"
      },
      {
        "command": "adonis-vscode-extension.make.prldfile",
        "title": "⌨️ AdonisJS(Ace) Make Preloaded File"
      },
      {
        "command": "adonis-vscode-extension.make.test",
        "title": "⌨️ AdonisJS(Ace) Make Test"
      },
      {
        "command": "adonis-vscode-extension.make.suite",
        "title": "⌨️ AdonisJS(Ace) Make Suite"
      },
      {
        "command": "adonis-vscode-extension.make.factory",
        "title": "⌨️ AdonisJS(Ace) Make Factory"
      },
      {
        "command": "adonis-vscode-extension.make.policy",
        "title": "⌨️ AdonisJS(Ace) Make Bouncer Policy"
      },
      {
        "command": "adonis-vscode-extension.migration.fresh",
        "title": "⌨️ AdonisJS(Ace) Migration Fresh"
      },
      {
        "command": "adonis-vscode-extension.migration.refresh",
        "title": "⌨️ AdonisJS(Ace) Migration Refresh"
      },
      {
        "command": "adonis-vscode-extension.migration.reset",
        "title": "⌨️ AdonisJS(Ace) Migration Reset"
      },
      {
        "command": "adonis-vscode-extension.migration.run",
        "title": "⌨️ AdonisJS(Ace) Migration Run"
      },
      {
        "command": "adonis-vscode-extension.migration.rollback",
        "title": "⌨️ AdonisJS(Ace) Migration Rollback"
      },
      {
        "command": "adonis-vscode-extension.generate.manifest",
        "title": "⌨️ AdonisJS(Ace) Generate Manifest"
      },
      {
        "command": "adonis-vscode-extension.configure",
        "title": "⌨️ AdonisJS(Ace) Configure package"
      },
      {
        "command": "adonis-vscode-extension.type-check",
        "title": "⌨️ AdonisJS(Ace) Type Check"
      },
      {
        "command": "adonis-vscode-extension.serve",
        "title": "⌨️ AdonisJS(Ace) Serve"
      },
      {
        "command": "adonis-vscode-extension.run-custom-command",
        "title": "⌨️ AdonisJS(Ace) Run custom command"
      },
      {
        "command": "adonis-vscode-extension.list.routes",
        "title": "⌨️ AdonisJS(Ace) List Routes"
      },
      {
        "command": "adonis-vscode-extension.test",
        "title": "⌨️  AdonisJS(Ace) Run Tests"
      },
      {
        "command": "adonis-vscode-extension.docs.adonis",
        "title": "📜 AdonisJS(Docs) Open Docs"
      },
      {
        "command": "adonis-vscode-extension.docs.japa",
        "title": "📜 AdonisJS(Docs) Open Japa Docs"
      }
    ],
    "snippets": [
      {
        "language": "typescript",
        "path": "./snippets/adonis/routes.json"
      },
      {
        "language": "edge",
        "path": "./snippets/edge/tags.jsonc"
      }
    ],
    "languages": [
      {
        "id": "edge",
        "aliases": [
          "Edge Template",
          "Edge",
          "edge"
        ],
        "extensions": [
          ".edge",
          ".edge.html"
        ],
        "configuration": "./syntaxes/edge.configuration.jsonc"
      }
    ],
    "grammars": [
      {
        "language": "edge",
        "scopeName": "text.html.edge",
        "path": "./syntaxes/edge.tmLanguage.json",
        "embeddedLanguages": {
          "source.css": "css",
          "source.js": "javascript",
          "meta.embedded.block.javascript": "javascript"
        }
      }
    ],
    "jsonValidation": [
      {
        "fileMatch": ".adonisrc.json",
        "url": "./schemas/adonisrc.jsonc"
      }
    ]
  },
  "scripts": {
    "build": "tsup",
    "dev": "tsup --watch src",
    "watch": "pnpm dev",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "typecheck": "tsc --noEmit",
    "version": "npm run build",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "test:electron": "tsc -p ./ && node ./out/test/run_electron_tests.js",
    "test:pure": "ts-node test/run_pure_tests.ts",
    "test": "npm run test:electron && npm run test:pure",
    "build:webpack": "webpack --mode production --devtool hidden-source-map",
    "vscode:prepublish": "pnpm build:webpack",
    "vscode:package": "vsce package",
    "vscode:publish": "vsce publish"
  },
  "dependencies": {
    "@julr/module-methods-extractor": "^0.0.1",
    "docblock": "^0.4.5",
    "fast-glob": "^3.2.12",
    "lodash.groupby": "^4.6.0",
    "vscode-ext-help-and-feedback-view": "^1.0.1",
    "vscode-html-languageservice": "^5.0.2",
    "vscode-languageserver-types": "^3.17.2"
  },
  "devDependencies": {
    "@japa/assert": "^1.3.6",
    "@japa/runner": "^2.2.1",
    "@japa/spec-reporter": "^1.3.0",
    "@julr/eslint-config": "^0.3.2",
    "@types/lodash.groupby": "^4.6.7",
    "@types/node": "14.x",
    "@types/sinon": "^10.0.13",
    "@types/vscode": "^1.65.0",
    "@vscode/test-electron": "^2.1.5",
    "eslint": "^8.23.1",
    "prettier": "^2.7.1",
    "sinon": "^14.0.0",
    "ts-loader": "^9.3.1",
    "ts-node": "^10.9.1",
    "tsup": "^6.2.3",
    "typescript": "^4.8.3",
    "webpack": "^5.74.0",
    "webpack-cli": "^4.10.0"
  },
  "pnpm": {
    "peerDependencyRules": {
      "ignoreMissing": [
        "openapi-types",
        "@babel/core"
      ]
    }
  },
  "eslintConfig": {
    "ignorePatterns": [
      "out",
      "syntaxes",
      "test/fixtures",
      "snippets",
      "schemas"
    ],
    "extends": [
      "@julr/eslint-config-ts",
      "@julr/eslint-config-prettier"
    ],
    "rules": {
      "no-useless-escape": "off"
    }
  },
  "prettier": {
    "trailingComma": "es5",
    "semi": false,
    "singleQuote": true,
    "useTabs": false,
    "quoteProps": "consistent",
    "bracketSpacing": true,
    "arrowParens": "always",
    "printWidth": 100
  }
}
